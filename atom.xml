<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tangguangen.com/"/>
  <updated>2018-08-02T08:26:06.808Z</updated>
  <id>https://tangguangen.com/</id>
  
  <author>
    <name>Author</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>The State of the Art in Semantic Representation</title>
    <link href="https://tangguangen.com/2018/08/02/the-state-of-the-art-in-semantic-repesentation/"/>
    <id>https://tangguangen.com/2018/08/02/the-state-of-the-art-in-semantic-repesentation/</id>
    <published>2018-08-02T07:38:31.845Z</published>
    <updated>2018-08-02T08:26:06.808Z</updated>
    
    <content type="html"><![CDATA[<p>作者：Omri Abend   and   Ari Rappoport</p><p>这是一篇ACL2017的文章，是一篇语义表示方面的综述性论文。作者对当前一些最先进的语义表示方案以及资源（比如 AMR, UCCA, GMB, UDS)进行了一个survey。 </p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>语义表示在过去的几年中越来越受到人们的关注，并且发表了很多语义表示方面的文章（例如：<em>AMR, UCCA, GMB, UDS</em>）。但是这些文章中很少和句法方案进行比较，评估他们之间的优缺点，也没有清楚的阐明语义表示研究的总体目标。这篇文章通过语义表示领域的最先进的论文和技术进行了survey，填补了这项空白。</p><p>这篇文章可以分为四部分：</p><ul><li><p>第一部分详细阐述了文本语义表示（SRT）的目的，作者将语义表示定义为<strong>将文本的意思</strong>映射为<strong>语言发言者所理解的语义</strong>表示。</p></li><li><p>第二部分对<strong>文本语义表示</strong>包含的主要内容进行了总结，语义表示的内容主要包括<strong>谓词论元关系</strong>（predicate-argument）、<strong>话语关系</strong>（discourse relations）和<strong>逻辑结构</strong>（logical structure）等。</p></li><li>第三部分详细介绍了当前最先进的SRT方案和注释资源，并且分别介绍了它们的评估标准以及与句法方案的比较。</li><li>第四部分进行了总结。</li></ul><h2 id="语义表示的定义"><a href="#语义表示的定义" class="headerlink" title="语义表示的定义"></a>语义表示的定义</h2><p>（术语 <em>semantics</em> 在不同的上下文中会有不同意思。）在这篇论文中，作者将语义表示定义为<strong>将文本的意思</strong>映射为<strong>语言发言者(language speaker)所理解的语义</strong>表示。因此，语义表示可以看成是<strong>提取信息的方法</strong>，所提取出来的信息可以由语言发言者直接评估。 提取过程应该可靠且计算效率高。</p><p>一种方法是通过外部（文本外）标准或应用程序提取信息。比如支持推理的文本语义表示，推理出文本蕴涵或自然逻辑。 其他例子包括根据支持知识库查询定义语义表示等。</p><p>另一个SRT的方法是通过向量空间模型（VSM），从单词到短语和句子级别的所有语言元素建模为向量，它避免使用符号结构。 使用这种方法的通常会调用神经网络，在许多任务上获得优秀的结果，包括词汇任务，如跨语言单词相似度，机器翻译等。</p><h2 id="语义内容"><a href="#语义内容" class="headerlink" title="语义内容"></a>语义内容</h2><p>SRTs的内容的基本组成成分是论元（argument）结构（谁对谁做了什么，何地，何时以及为什么）。换句话说就是事件（events），表示参与者和他们之间的关系。</p><p>我们将使用以下作为运行示例：<br>(1) Although Ann was leaving, she gave the present to John.</p><p><strong>Events.</strong>  </p><p>一个事件包括谓词，它是事件的主要决定因素。  事件还包括论元（参与者，核心元素）和次级关系（修饰符，非核心元素）。示例1通常被视为具有两个事件，由谓词“leaving”和“gave”引起。</p><p><strong>Predicates and Arguments.</strong>  </p><p>谓词论元关系被普遍认为是语义表示的基础。大多数语义角色标注（SRL）方案涵盖了各种各样的动词谓词，但不同之处在于他们是否涵盖了名词性谓词和形容词谓词。例如，PropBank（Palmer et al。，2005）是SRL的主要资源之一，涵盖动词，并且在其最新版本中也包括偶数名词和多论元形容词。 FrameNet（Ruppenhofer等，2016）涵盖了所有这些，但也包括不引起事件的关系名词，如“president”。 其他工作涉及出现在句子边界之外的语义参数，或者没有明确出现在文本中的任何地方（Gerber和Chai，2010; Roth和Frank，2015）。</p><p><strong>Core and Non-core Arguments.</strong></p><p>论元类型之间最常见的区别在于核心和非核心论元。虽然可以在必需论元和可选论元之间进行区别，但在这里我们关注语义维度，它区分了其含义是特定谓词的论元，并且是所描述事件（核心）的必要组成，以及一般谓词（非核心）。 </p><p><strong>Semantic Roles.</strong></p><p>语义角色是论元的类别。 多年来已经在NLP中提出并使用了许多不同的语义角色库，最突出的是FrameNet，以及PropBank。 PropBank的角色集由AMR等后续项目扩展。 另一个突出的语义角色库是VerbNet和之后的项目，它们定义了一组封闭的抽象语义角色集合，适用于所有谓词论元。</p><p><strong>Co-reference and Anaphora.</strong></p><p>共指关系允许从引用相同实体的不同方式中抽象出来，并且通常包括在语义资源中。</p><p><strong>Temporal Relations.</strong></p><p>NLP中的大多数时间语义工作都集中在事件之间的时间关系上，或者通过根据文本中找到的时间表达式对它们进行时间戳，或者通过预测它们在时间上的相对顺序。 重要资源包括TimeML，它是时间关系的规范语言，以及TempEval系列共享任务和注释语料库。与时间关系相关的是事件之间的因果关系，它们在语言中无处不在，并且是各种应用的核心。</p><p><strong>Spatial Relations.</strong></p><p> 空间关系的表示在语义的认知理论中是关键的，并且在诸如地理信息系统或机器人导航的应用领域中是关键的。 该领域的重要任务包括空间角色标记，该任务包括空间元素和空间关系的识别和分类，例如地点，路径，方向和运动，以及它们的相对结构。</p><p><strong>Discourse Relations</strong></p><p>话语关系包含事件或更大的语义单元之间的任何语义关系。 例如，在（1）中，leaving和giving事件有时通过CONCESSION类型的话语关系相关，由“although”引起。 此类信息非常有用，通常对于各种NLP任务例如摘要，机器翻译和信息提取至关重要，但在开发此类系统时通常会被忽略。</p><p><strong>Logical Structure.</strong></p><p>逻辑结构是许多理论语言学中语义分析的基石，也在NLP领域引起了广泛关注。常见的表示通常基于谓词演算的变体，对于需要将文本映射到外部（通常是可执行的）形式语言的应用程序非常有用，例如查询语言或机器人指令。逻辑结构对于识别句子之间的蕴涵关系也很有用，因为一些蕴涵可以通过正式证明者从文本的逻辑结构中计算出来。</p><p><strong>Inference and Entailment.</strong></p><p> 许多语义方案的主要动机是它们支持推理和蕴涵的能力。 </p><h2 id="语义方案和资源"><a href="#语义方案和资源" class="headerlink" title="语义方案和资源"></a>语义方案和资源</h2><p>本节简要介绍了SRT的不同方案和资源。 </p><p><strong>Semantic Role Labeling.</strong>  SRL方案通常被称为“浅层语义分析”，因为它们专注于论元结构，忽略了其他关系，如话语事件，或者谓词和论元是如何在内部构建的。</p><p>SRL方案在它们的事件类型，涵盖的谓词类型，粒度，跨语言适用性，组织原则以及它们与句法的关系方面有所不同。大多数SRL方案相对于某些语法结构定义它们的注释，例如在PropBank的情况下PTB的解析树，或者在FrameNet的情况下为SRL目的定义的专用语法类别。除了上面讨论的PropBank，FrameNet和VerbNet之外，其他值得关注的资源包括Semlink（Loper等，2007），它链接不同资源中的相应条目，如Prop-Bank，FrameNet，VerbNet和WordNet，以及Preposition Supersenses项目（Schneider et al。，2015），侧重于介词引发的角色。</p><p><strong>AMR</strong> （抽象语义表示）涵盖谓词 - 论元关系，包括语义角色，它适用于各种谓词（包括言语，名词和形容词谓词），修饰词，共指关系，命名实体和一些时间表达。AMR目前不支持高于句子级别的关系到一个语义类别。并且是以英语中心，因此，在跨语言时，AMR面临着困难。</p><p><strong>UCCA</strong> （通用概念认知注释）是一种跨语言适用的语义注释方案，建立在类型学理论的基础上，主要基于基础语言学理论。UCCA的基础层次侧重于各种类型的论元结构和它们之间的关系。其当前状态中，UCCA比上述方案更粗糙（例如，它不包括语义角色信息）。 然而，它的跨语言中得到很好的推广。UCCA另一个优点是支持非专家的注释。</p><p><strong>UDS.</strong>  Universal Decompositional Semantics 通用分解语义是一种多层方案，目前包括语义角色注释，词义和体类。 然而，UDS表示的骨架结构源自句法依赖性，并且仅包括动词论元结构。</p><p><strong>The Prague Dependency Treebank (PDT) Tectogrammatical Layer (PDT-TL)</strong>涵盖了丰富的功能和语义差异，例如论元结构（包括语义角色）， 时态，省略号，主题/焦点，共指关系，词义消歧和方言信息。 PDT-TL源于对PDT语法层的抽象，其与语法的密切关系是显而易见的。</p><p><strong>CCG-based Schemes.</strong>  CCG是一种词汇化语法（即，几乎所有语义内容都在词典中编码），它定义了词汇信息如何组成以构成短语和句子含义的理论，并且在各种语义任务中被证明是有效的。</p><p><strong>HPSG-based Schemes.</strong> 与基于CCG的方案相关的是基于Head-driven Phrase Structure Grammar的SRT，其中句法和语义特征被表示为特征束，其通过统一规则迭代地组成以形成复合单元。 基于HPSG的SRT方案通常使用Minimal Recursion Semantics形式化。 注释语料库和手工制作的语法存在多种语言，并且通常关注论元结构和逻辑语义现象。</p><p><strong>OntoNotes</strong> 是一个有用的资源，具有多个相互关联的注释层，借用于不同的方案。 这些层包括句法，SRL，共指关系和词义消歧内容。 谓词的某些属性，例如哪些名词是偶数，也被编码。</p><p>总而言之，虽然SRT方案在它们支持的内容类型上有所不同，但方案不断发展以不断添加新的内容类型，从而使这些差异不那么重要。 这些方案之间的根本区别在于它们从语法中抽象出来的程度。 例如，AMR和UCCA从语法中抽象出来作为其设计的一部分，而在大多数其他方案中，句法法和语义更加紧密耦合。</p><h2 id="评估"><a href="#评估" class="headerlink" title="评估"></a>评估</h2><p>人类评估是验证SRT方案的最终标准，因为我们将语义定义为语言发言者理解的意义。 确定SRT方案的理想程度是通过人类根据预先指定的要求对文本进行一些语义预测或注释，并将其与从SRT提取的信息进行比较。</p><p>另一种评估方法是基于任务的评估。NLP中的许多语义表示都是在考虑应用程序的情况下定义的，这使得这种评估方式显得更加自然。例如，AMR的一个主要动机是它对机器翻译的适用性，使MT成为AMR评估的一个自然（虽然迄今未开发）测试平台。 另一个例子是使用问答来评估基于知识查询中的语义解析。</p><p>评估语义方案的另一个常见标准是不变性（invariance），其中语义分析应该在释义或翻译对之间相似。</p><p>重要的是，这些评估标准也适用于自动引发表示而非手动定义的情况。 例如，通常通过基于任务的评估或者根据从它们计算的语义特征来评估向量空间表示，其有效性由人类注释者建立（例如，Agirre等人，2013,2014）。</p><p>最后，在通过手动注释（而不是通过自动化程序）引入语义方案的情况下，确定指南是否足够清晰以及类别是否定义明确的共同标准是通过为注释者指定一致来衡量注释者之间的一致性。 相同的文本和测量结果的相似性。 措施包括针对AMR的SMATCH测量（Cai和Knight，2013），以及适用于UCCA的DAG的PARSEVAL F-评分（Black等，1991）。</p><p>SRT方案在他们的注释者所需的背景和训练方面存在分歧。 一些方案需要广泛的训练（例如，AMR），而其他方案可以（至少部分地）通过众包（例如，UDS）来收集。 其他例子包括FrameNet，它需要专家注释者来创建新的事件，但是使用训练有素的内部注释器将现有的帧应用于文本; QASRL，远程使用非专家注释器; 和UCCA，它使用内部非专家，在初始培训期后证明对非专家注释器的专家没有优势。 GMB的另一种方法是使用在线协作，其中专家协作者参与手动纠正自动创建的表示。 他们进一步采用游戏化策略来收集注释的某些方面。</p><p><strong>Universality.</strong>  语义分析（通过更多表面形式的分析）的巨大承诺之一是其跨语言潜力。 然而，尽管普遍性在语义学中的理论和应用重要性早已得到认可（Goddard，2011），但普遍语义学的本质仍然未知。 最近，诸如BabelNet（Ehrmann等人，2014），UBY（Gurevych等人，2012）和Open Multilingual Wordnet等项目构建了庞大的多语言语义网络，通过链接Wikipedia和WordNet等资源并使用现代NLP技术处理它们。 然而，此类项目目前侧重于词汇语义和百科全书信息，而不是文本语义。</p><p>诸如SRL方案和AMR之类的符号SRT方案也因其跨语言适用性而被研究（Pad’o和Lapata，2009; Sun等，2010; Xue等，2014），表明跨语言的部分可移植性。 已经为多种语言构建了PropBank和FrameNet的翻译版本（例如，Akbik等，2016; Hartmann和Gurevych，2013）。 然而，由于PropBank和FrameNet都是词汇化方案，并且由于词汇在跨语言中大相径庭，因此这些方案在跨语言移植时需要相当大的适应性（Kozhevnikov和Titov，2013）。 正在进行的研究解决了将VerbNet的非语言化角色概括为普遍适用的集合（例如，Schneider等，2015）。 很少有SRT方案将跨语言适用性作为其主要标准之一，例如UCCA和LinGO语法矩阵（Bender和Flickinger，2005），两者都借鉴了类型学理论。</p><p>在向量空间中嵌入单词和句子的向量空间模型也被用于引发共享的跨语言空间（Klementiev等，2012; Rajendran等，2015; Wu等，2016）。 然而，需要进一步评估以确定这些表示的可能含义的哪些方面可靠地反映。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>NLP中的语义表示正在经历快速变化。 传统的语义工作要么使用侧重于特定语义现象的浅层方法，要么采用形式语义理论，这些理论通过语法 - 语义推理理论与句法方案相结合。 近年来，人们越来越关注一种独立于任何句法或分布标准定义语义结构的替代方法，这很大程度上归功于实现这种方法的语义树库的可用性。</p><p>语义方案在它们是否固定在文本的单词和短语(例如，所有类型的语义依赖关系和UCCA)中存在分歧(例如，AMR和基于逻辑的表示)。我们不认为这是一个主要的区别，因为大多数非雇定的表示(包括AMR)与句子中的单词保持着密切的亲和力，这可能是因为没有一个可行的词汇分解方案，而依赖结构可以转换成基于逻辑的表示(Reddy et al.， 2016)。在实践中，固定可以促进解析，而非锚定表示可以更灵活地使用不存在单词和语义组件的一一对应。</p><p>这篇论文总结了方案之间的主要区别因素是它们与句法方案之间的关系、它们的普遍性程度以及它们对注释者的专业知识的要求，这是解决注释瓶颈的一个重要因素。我们希望通过对语义表示的最先进的研究来促进研究者的讨论，使更多的研究人员接触到语义表示中最紧迫的问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作者：Omri Abend   and   Ari Rappoport&lt;/p&gt;
&lt;p&gt;这是一篇ACL2017的文章，是一篇语义表示方面的综述性论文。作者对当前一些最先进的语义表示方案以及资源（比如 AMR, UCCA, GMB, UDS)进行了一个survey。 &lt;/p&gt;

      
    
    </summary>
    
      <category term="阅读笔记" scheme="https://tangguangen.com/categories/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="NLP" scheme="https://tangguangen.com/tags/NLP/"/>
    
      <category term="Paper" scheme="https://tangguangen.com/tags/Paper/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://tangguangen.com/2018/07/31/hello-world/"/>
    <id>https://tangguangen.com/2018/07/31/hello-world/</id>
    <published>2018-07-31T11:43:20.284Z</published>
    <updated>2018-08-02T06:51:12.495Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="生活随笔" scheme="https://tangguangen.com/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
    
  </entry>
  
</feed>
